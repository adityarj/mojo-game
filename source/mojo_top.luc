module mojo_top (
    input clk,              // 50MHz clock
    input rst_n,            // reset button (active low)
    output rand_number[4],
    output output_digit_less[4],
    output output_digit_high[4],
    output operator[9],
    input switch_i,
    input switch_j,
    input enter,
    input reset
    //output io_led[19]
     //Assign LEDs as 5,4 -> operator LEDs, 3-0 -> RNG LEDs
 
  ) {
 
  sig rst;                  // reset signal
  dff bigclock[32](.clk(clk), .rst(rst));
  
  game game;
  .clk(clk) {
    reset_conditioner reset_cond; 
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    
    .rst(rst) {
    }
   
  }
 
  always {
    reset_cond.in = rst_n;
    rst = reset_cond.out;
    game.rst_n = rst;
    
    game.clk = clk;
    bigclock.d = bigclock.q + 1;
    
    game.switch_i = switch_i;
    game.switch_j = switch_j;
    game.enter = enter;
    game.reset = reset;
    
    output_digit_high = game.output_digit_high;
    output_digit_less = game.output_digit_less;
    operator = game.operator;
    //io_led[18:0] = game.io_led[18:0];
    rand_number = game.rand_number;
   
  }
}
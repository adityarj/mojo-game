module mojo_top (
    input clk,              // 50MHz clock
    input rst_n,            // reset button (active low)
    input cclk,             // configuration clock, AVR ready when high
    input spi_ss,           // AVR SPI Slave Select
    input spi_mosi,         // AVR SPI MOSI
    input spi_sck,          // AVR SPI Clock
    input avr_tx,           // AVR TX (FPGA RX)
    input avr_rx_busy,       // AVR RX buffer full
    input io_dip[4]
  ) {
  
  sig rst;                  // reset signal
  
  .clk(clk) {
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    reset_conditioner reset_cond;
  }
  
  always {
    reset_cond.in = ~rst_n; // input raw inverted reset signal
    rst = reset_cond.out;   // conditioned reset
    
    //Check if reset signal has been asserted 
    if (io_dip[0]) {
      //Reset game, set current number to random 0-9, assign new numbers and operators to the user
    }
    
    //Check for change in outputed numbers
    if (io_dip[1]) {
      
    }
    
    //Check for change in assigned operators
    if (io_dip[2]) {
      
    }
    
    
  
  }
}